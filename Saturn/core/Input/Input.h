#ifndef INPUT_H
#define INPUT_H

#include "GLFW/glfw3.h"


namespace Saturn {

	enum class KeyboardInput {
		SPACE_KEY = GLFW_KEY_SPACE,
		APOSTROPHE_KEY = GLFW_KEY_APOSTROPHE,
		COMMA_KEY = GLFW_KEY_COMMA,
		MINUS_KEY = GLFW_KEY_MINUS,
		PERIOD_KEY = GLFW_KEY_PERIOD,
		FORWARD_SLASH_KEY = GLFW_KEY_SLASH,
		ZERO_KEY = GLFW_KEY_0,
		ONE_KEY = GLFW_KEY_1,
		TWO_KEY = GLFW_KEY_2,
		THREE_KEY = GLFW_KEY_3,
		FOUR_KEY = GLFW_KEY_4,
		FIVE_KEY = GLFW_KEY_5,
		SIX_KEY = GLFW_KEY_6,
		SEVEN_KEY = GLFW_KEY_7,
		EIGHT_KEY = GLFW_KEY_8,
		NINE_KEY = GLFW_KEY_9,
		SEMICOLON_KEY = GLFW_KEY_SEMICOLON,
		EQUAL_KEY = GLFW_KEY_EQUAL,
		A_KEY = GLFW_KEY_A,
		B_KEY = GLFW_KEY_B,
		C_KEY = GLFW_KEY_C,
		D_KEY = GLFW_KEY_D,
		E_KEY = GLFW_KEY_E,
		F_KEY = GLFW_KEY_F,
		G_KEY = GLFW_KEY_G,
		H_KEY = GLFW_KEY_H,
		I_KEY = GLFW_KEY_I,
		J_KEY = GLFW_KEY_J,
		K_KEY = GLFW_KEY_K,
		L_KEY = GLFW_KEY_L,
		M_KEY = GLFW_KEY_M,
		N_KEY = GLFW_KEY_N,
		O_KEY = GLFW_KEY_O,
		P_KEY = GLFW_KEY_P,
		Q_KEY = GLFW_KEY_Q,
		R_KEY = GLFW_KEY_R,
		S_KEY = GLFW_KEY_S,
		T_KEY = GLFW_KEY_T,
		U_KEY = GLFW_KEY_U,
		V_KEY = GLFW_KEY_V,
		W_KEY = GLFW_KEY_W,
		X_KEY = GLFW_KEY_X,
		Y_KEY = GLFW_KEY_Y,
		Z_KEY = GLFW_KEY_Z,
		LEFT_SQUARE_BRACKET_KEY = GLFW_KEY_LEFT_BRACKET,
		BACKWARD_SLASH_KEY = GLFW_KEY_BACKSLASH,
		RIGHT_SQUARE_BRACKET_KEY = GLFW_KEY_RIGHT_BRACKET,
		GRAVE_ACCENT_KEY = GLFW_KEY_GRAVE_ACCENT,
		ESCAPE_KEY = GLFW_KEY_ESCAPE,
		ENTER_KEY = GLFW_KEY_ENTER,
		TAB_KEY = GLFW_KEY_TAB,
		BACKSPACE_KEY = GLFW_KEY_BACKSPACE,
		INSERT_KEY = GLFW_KEY_INSERT,
		DELETE_KEY = GLFW_KEY_DELETE,
		RIGHT_KEY = GLFW_KEY_RIGHT,
		LEFT_KEY = GLFW_KEY_LEFT,
		UP_KEY = GLFW_KEY_DOWN,
		DOWN_KEY = GLFW_KEY_UP,
		PAGEUP_KEY = GLFW_KEY_PAGE_UP,
		PAGEDOWN_KEY = GLFW_KEY_PAGE_DOWN,
		HOME_KEY = GLFW_KEY_HOME,
		END_KEY = GLFW_KEY_END,
		CAPSLOCK_KEY = GLFW_KEY_CAPS_LOCK,
		SCROLLLOCK_KEY = GLFW_KEY_SCROLL_LOCK,
		NUMLOCK_KEY = GLFW_KEY_NUM_LOCK,
		PRINTSCREEN_KEY = GLFW_KEY_PRINT_SCREEN,
		PAUSE_KEY = GLFW_KEY_PAUSE,
		F1_KEY = GLFW_KEY_F1,
		F2_KEY = GLFW_KEY_F2,
		F3_KEY = GLFW_KEY_F3,
		F4_KEY = GLFW_KEY_F4,
		F5_KEY = GLFW_KEY_F5,
		F6_KEY = GLFW_KEY_F6,
		F7_KEY = GLFW_KEY_F7,
		F8_KEY = GLFW_KEY_F8,
		F9_KEY = GLFW_KEY_F9,
		F10_KEY = GLFW_KEY_F10,
		F11_KEY = GLFW_KEY_F11,
		F12_KEY = GLFW_KEY_F12,
		KEYPAD_0_KEY = GLFW_KEY_KP_0,
		KEYPAD_1_KEY = GLFW_KEY_KP_1,
		KEYPAD_2_KEY = GLFW_KEY_KP_2,
		KEYPAD_3_KEY = GLFW_KEY_KP_3,
		KEYPAD_4_KEY = GLFW_KEY_KP_4,
		KEYPAD_5_KEY = GLFW_KEY_KP_5,
		KEYPAD_6_KEY = GLFW_KEY_KP_6,
		KEYPAD_7_KEY = GLFW_KEY_KP_7,
		KEYPAD_8_KEY = GLFW_KEY_KP_8,
		KEYPAD_9_KEY = GLFW_KEY_KP_9,
		KEYPAD_PERIOD_KEY = GLFW_KEY_KP_DECIMAL,
		KEYPAD_DIVIDE_KEY = GLFW_KEY_KP_DIVIDE,
		KEYPAD_MULTIPLY_KEY = GLFW_KEY_KP_MULTIPLY,
		KEYPAD_SUBTRACT_KEY = GLFW_KEY_KP_SUBTRACT,
		KEYPAD_ADD_KEY = GLFW_KEY_KP_ADD,
		KEYPAD_ENTER_KEY = GLFW_KEY_KP_ENTER,
		KEYPAD_EQUAL_KEY = GLFW_KEY_KP_EQUAL,
		LEFT_SHIFT_KEY = GLFW_KEY_LEFT_SHIFT,
		LEFT_CONTROL_KEY = GLFW_KEY_LEFT_CONTROL,
		LEFT_ALT_KEY = GLFW_KEY_LEFT_ALT,
		LEFT_SUPER_KEY = GLFW_KEY_LEFT_SUPER,
		RIGHT_SHIFT_KEY = GLFW_KEY_RIGHT_SHIFT,
		RIGHT_CONTROL_KEY = GLFW_KEY_RIGHT_CONTROL,
		RIGHT_ALT_KEY = GLFW_KEY_RIGHT_ALT,
		RIGHT_SUPER_KEY = GLFW_KEY_RIGHT_SUPER,
		MENU_KEY = GLFW_KEY_MENU
	};

	enum class KeyboardInputAction {
		KEY_PRESSED = GLFW_PRESS,
		KEY_RELEASED = GLFW_RELEASE,
		KEY_HOLD = GLFW_REPEAT
	};
}

#endif INPUT_H

